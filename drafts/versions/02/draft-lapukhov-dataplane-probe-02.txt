



opsawg                                                       P. Lapukhov
Internet-Draft                                                  Facebook
Intended status: Standards Track                                R. Chang
Expires: September 17, 2018                            Barefoot Networks
                                                             S. Bhandari
                                                            F. Brockners
                                                                   Cisco
                                                          March 16, 2018


           Data-plane probe for in-band telemetry collection
                   draft-lapukhov-dataplane-probe-02

Abstract

   Detecting and isolating network faults in IP networks has
   traditionally been done using tools like ping and traceroute (see
   [RFC7276]) or more complex systems built on similar concepts of
   active probing and path tracing.  While using active synthetic probes
   is proven to be helpful in detecting data-plane faults, isolating
   fault location is a much harder problem, especially in diverse
   networks with multiple active forwarding planes (e.g.  IP and MPLS).
   Moreover, existing end-to-end tools do not generally support
   functionality beyond dealing with packet loss - for example, they are
   hardly useful for detecting and reporting transient (i.e. milli- or
   even micro-second) network congestion.

   Modern network forwarding hardware can allow for more sophisticated
   data-plane functionality that provides substantial improvement to the
   isolation and identification capabilities of network elements.  For
   example, it has become possible to encode a snapshot of a network
   element's state within the packet payload as it transits the device.
   One example of such state would be queue depth on the egress port
   taken by that specific packet.  When combined with a unique device
   identifier embedded in the same packet, this could allow for precise
   time and topological identification of the the congested location
   within the network.

   This document proposes a mechanism for requesting and embedding
   telemetry information in active probes, i.e. packet designated for
   actively testing the network while not carrying application traffic.
   These active probes could be conveyed over multiple protocols (ICMP,
   UDP, TCP, etc.) and the document does not prescribe any particular
   transport.  In addition, this document provides recommendations on
   handling the active probes by devices that do not support the
   required data-plane functionality.





Lapukhov, et al.       Expires September 17, 2018               [Page 1]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 17, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Data plane probe  . . . . . . . . . . . . . . . . . . . . . .   4
     2.1.  Probe transport . . . . . . . . . . . . . . . . . . . . .   4
     2.2.  Probe structure . . . . . . . . . . . . . . . . . . . . .   4
     2.3.  Probe Message Format  . . . . . . . . . . . . . . . . . .   4
     2.4.  Use of Telemetry Data for Data Plane Probes . . . . . . .   5
       2.4.1.  In-situ OAM Tracing Options . . . . . . . . . . . . .   5
       2.4.2.  In-situ OAM Edge-to-Edge Option . . . . . . . . . . .   6
   3.  Operating in loopback mode  . . . . . . . . . . . . . . . . .   6
   4.  Processing Probe Packet . . . . . . . . . . . . . . . . . . .   7
     4.1.  Detecting a probe . . . . . . . . . . . . . . . . . . . .   7
   5.  Non-Capable Devices . . . . . . . . . . . . . . . . . . . . .   7
   6.  Handling data-plane probes in the MPLS domain . . . . . . . .   8
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8



Lapukhov, et al.       Expires September 17, 2018               [Page 2]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


   8.  Security Considerations . . . . . . . . . . . . . . . . . . .   8
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .   8
     9.2.  Informative References  . . . . . . . . . . . . . . . . .   9
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   9

1.  Introduction

   Detecting and isolating faults in IP networks may involve multiple
   tools and approaches, but by far the two most popular utilities used
   by operators are ping and traceroute.  The ping utility provides the
   basic end-to-end connectivity check by sending a special ICMP packet.
   There are other variants of ping that work using TCP or UDP probes,
   but may require a special responder application (for UDP) on the
   other end of the probed connection.

   This type of active probing approach has its limitations.  First, it
   operates end-to-end and thus it is impossible to tell where in the
   path the fault has happened from simply observing the packet loss
   ratios.  Secondly, in multipath (ECMP) scenarios it can be difficult
   to fully and/or deterministically exercise all the possible paths
   connecting two end-points.

   The traceroute utility has multiple variants as well - UDP, ICMP and
   TCP based, for instance, and special variant for MPLS LSP testing.
   Practically all variants follow the same model of operations: varying
   TTL field setting in outgoing probes and analyzing the returned ICMP
   unreachable messages.  This does allow isolating the fault down to
   the IP hop that is losing packets, but has its own limitations.  As
   with the ping utility, it becomes complicated to explore all possible
   ECMP paths in the network.  This is especially problematic in large
   Clos fabric topologies that are very common in large data-center
   networks.  Next, many network devices limit the rate of outgoing ICMP
   messages as well as the rate of "exception" packets "punted" to the
   control plane processor.  This puts a functional limit on the packet
   rate that the traceroute can probe a given hop with, and hence
   impacts the resolution and time to isolate a fault.  Lastly, the
   treatment for these control packets is often different from the
   packets that take regular forwarding path: the latter are normally
   not redirected to the control plane processor and handled purely in
   the data-plane hardware.

   Modern network processing elements (both hardware and software based)
   are capable of packet handling beyond basic forwarding and simple
   header modifications.  Of special interest is the ability to capture
   and embed instantaneous state from the network element and encode
   this state directly into the transit packet.  One example would be to
   record the transit device's name, ingress and egress port



Lapukhov, et al.       Expires September 17, 2018               [Page 3]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


   identifiers, queueing delays, timestamps and so on.  By collecting
   this state along each network device in the path, it becomes trivial
   to trace a probe's path through the network as well as record transit
   device characteristics.  Extending this model, one could build a tool
   that combines the useful properties of ping and traceroute using a
   single packet flight through the network, without the constraints of
   control plane (aka "slow path") processing.  To aid in the
   development of such tooling, this document defines a format for
   requesting and embedding telemetry information in the body of active
   probing packets.

2.  Data plane probe

   This section defines the structure of the active data-plane probe.

2.1.  Probe transport

   This document does not prescribe any specific encapsulation for the
   data-plane probe.  For example, the probe could be embedded inside a
   UDP packet, or within an IPv6 extension header or as TCP option.

2.2.  Probe structure

   The probe consists of a fixed-size "Probe-Message" and variable-
   length "Telemetry Data Frames".  Probe-Message and Telemetry Data
   Frames are independent and can be embedded inside any layer of
   transport.  Telemetry Data Frames are typically updated at each hop,
   are of variable length, and each frame, in turn, consists of multiple
   "Telemetry Record" fields.

2.3.  Probe Message Format

   The probe message is of fixed-size.  It identifies the packet as a
   data-plane probe packet, type of the probe packet, context for
   matching probe request and response.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         Probe Marker (1)                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         Probe Marker (2)                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Version     | Message Type  |        Sender's Handle        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


                          Figure 1: Header Format



Lapukhov, et al.       Expires September 17, 2018               [Page 4]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


   (1)  The "Probe Marker" fields are arbitrary 32-bit values generally
        used by the probe initiator and responders to identify the
        packet as a probe packet.  These fields should be interpreted as
        unsigned integer values, stored in network byte order.  For
        example, a network element may be configured to recognize a UDP
        packet destined to port 31337 and having 0xDEAD 0xBEEF as the
        values in "Probe Marker" field as an active probe, and treat it
        respectively.

   (2)  "Version Number" is currently set to 1.

   (3)  The "Message Type" field value could be either "1" - "Probe" or
        "2" - "Probe Reply"

   (4)  The "Sender's Handle" field is set by the sender to allow the
        receiver to identify a particular originator of probe packets.

2.4.  Use of Telemetry Data for Data Plane Probes

   In case a data plane probe fails, or in cases details of how probe
   data is transported in the network are to be derived, telemetry data
   can be added to data plane probe packets to retrieve additional
   details.  In such a case, in-situ OAM (IOAM) data records (see
   [I-D.brockners-inband-oam-data]) can be added to the data plane probe
   packets.  With IOAM, hop by hop path tracing information can be added
   to the probe packets to support detailed fault detection and fault
   isolation.  An operational scenario could look as follows: An
   operator observes a failure of a data plane probe for a particular
   source, destination and port.  The failure triggers the addition of
   IOAM path tracing information to the data plane probe as well as
   turning on IOAM loopback mode for tracing.  As a result, data plane
   probe packets now record the path that they are taking from source to
   destination (and from destination to source, in case the operation is
   done symmetrically).  The loopback option ensures that source and
   destination receive copies of the packets that arrive at intermediate
   node, and from correlating that information can derive the failed
   node(s) or link(s).

   The following sections provide an overview of which data records can
   be collected as part of IOAM within the data plane probe packet.

2.4.1.  In-situ OAM Tracing Options

   The [I-D.brockners-inband-oam-data] defined Pre-allocated Trace
   Option and Incremental Trace Option to collect trace information at
   each hop that the probe packet passes through in the network.  One or
   both these trace options can be included in the probe packet.  Using




Lapukhov, et al.       Expires September 17, 2018               [Page 5]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


   In-Situ OAM tracing option, the following data could be collected in
   the probe:

   o  Identification of network element through which packet passes
      through.

   o  Identification of the interface that a packet was received on the
      network element.

   o  Identification of the interface that a packet was sent out on the
      network element.

   o  Timestamp at which the packet was processed by the network
      element.

   o  Transit Delay - Time packet spent in the transit at a network
      element.

   o  Queue Depth at egress interface on the network element.

   o  Arbitrary state of the network element without a pre-defined
      schema.

2.4.2.  In-situ OAM Edge-to-Edge Option

   This refers to telemetry data added at the sender and not to be
   modified by any transit nodes in network.  Using In-situ OAM Edge-to-
   Edge option, a sequence number could be added in probe packet in
   order to detect packet loss, packet reordering, or packet duplication
   in the network.

3.  Operating in loopback mode

   In "loopback" mode the flow of probes is "turned back" at each
   network element while still forwarding the original probe packet.
   When the L-bit is set in the flags field of the In-Situ-OAM Trace
   option it is used to convey the network element to start loopback
   operation.  The network element that receives a probe packet having
   the L-bit set in flags of the In-Situ-OAM Trace option is required to
   make a copy of the packet before forwarding the packet.  The node is
   to perform the following on the copy of the packet:

      Change the "Message Type" field to "Probe Reply".

      Swap the destination IP addresses in the transport header with
      source to send the packet back to the originator.





Lapukhov, et al.       Expires September 17, 2018               [Page 6]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


      Use current address of the node as source address in transport
      header.

      Add a new telemetry data frame corresponding to the new forwarding
      information in the In-situ OAM Trace Option.

   This way, a copy of the original probe is routed back to originator.
   Notice that the return path may be different from the path that the
   original probe has taken.  This path will be recorded by the network
   elements as the reply is transported back to the sender.  Using this
   technique one may detect the location of an unreliable or broken link
   in a path with just one probe packet.

   If a network element is incapable of redirecting packets back to the
   originator, another option would be to export those packets to a
   network analyzer device.  Details on how the packet might be exported
   are outside the scope of this document.

4.  Processing Probe Packet

4.1.  Detecting a probe

   As mentioned previously, a combination of techniques is required to
   differentiate the active probes.  This may include, but should not be
   limited to using just the known position of "Probe Id" fields.

5.  Non-Capable Devices

   Non-capable devices are those that cannot process a probe natively in
   the fast-path data plane.  Further, there could be two types of such
   devices: those that can still process it via the control-plane
   software, and those that can not.  The control-plane processing
   should be triggered by use of the "Router-Alert" option for IPv4 of
   IPv6 packets (see [RFC2113] or [RFC2711]) added by the originator of
   the probe.  A control-plane capable device is expected to interpret
   and fill-in as much telemetry-record data as it possibly could, given
   the limited abilities.

   Network elements that are not capable of processing the data-plane
   probes are expected to perform regular packet forwarding.  If a
   network element receives a packet with the router-alert option set,
   but has no special configuration to detect such probes, it should
   process it according to [RFC6398].  Absence of the router alert
   option leaves the non dataplane-capable devices with the only option
   of processing the probe using traditional forwarding.






Lapukhov, et al.       Expires September 17, 2018               [Page 7]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


6.  Handling data-plane probes in the MPLS domain

   In general, the payload of an MPLS packet is opaque to the network
   element.  However, in many cases the network element still performs a
   lookup beyond the MPLS label stack, e.g. to obtain information such
   as L4 ports for load balancing.  It may be possible to perform data-
   plane probe classification in the same manner, additionally using the
   "Probe Marker" to distinguish the probe packets.

   In accordance to [RFC6178] Label Edge Routers (LERs) are required not
   to impose an MPLS router-alert label for packets carrying the router-
   alert option.  It may be beneficial to enable such translation, so
   that an end-to-end validation could be performed if a control-plane
   capable MPLS network element is present on the probe's path.

7.  IANA Considerations

   There are no IANA considerations for this draft.

8.  Security Considerations

   Security considerations will be addressed in a later version of this
   document.

9.  References

9.1.  Normative References

   [RFC2113]  Katz, D., "IP Router Alert Option", RFC 2113,
              DOI 10.17487/RFC2113, February 1997,
              <https://www.rfc-editor.org/info/rfc2113>.

   [RFC2711]  Partridge, C. and A. Jackson, "IPv6 Router Alert Option",
              RFC 2711, DOI 10.17487/RFC2711, October 1999,
              <https://www.rfc-editor.org/info/rfc2711>.

   [RFC6178]  Smith, D., Mullooly, J., Jaeger, W., and T. Scholl, "Label
              Edge Router Forwarding of IPv4 Option Packets", RFC 6178,
              DOI 10.17487/RFC6178, March 2011,
              <https://www.rfc-editor.org/info/rfc6178>.

   [RFC6398]  Le Faucheur, F., Ed., "IP Router Alert Considerations and
              Usage", BCP 168, RFC 6398, DOI 10.17487/RFC6398, October
              2011, <https://www.rfc-editor.org/info/rfc6398>.







Lapukhov, et al.       Expires September 17, 2018               [Page 8]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


9.2.  Informative References

   [I-D.brockners-inband-oam-data]
              Brockners, F., Bhandari, S., Pignataro, C., Gredler, H.,
              Leddy, J., Youell, S., Mizrahi, T., Mozes, D., Lapukhov,
              P., Chang, R., and d. daniel.bernier@bell.ca, "Data Fields
              for In-situ OAM", draft-brockners-inband-oam-data-07 (work
              in progress), July 2017.

   [RFC7276]  Mizrahi, T., Sprecher, N., Bellagamba, E., and Y.
              Weingarten, "An Overview of Operations, Administration,
              and Maintenance (OAM) Tools", RFC 7276,
              DOI 10.17487/RFC7276, June 2014,
              <https://www.rfc-editor.org/info/rfc7276>.

Authors' Addresses

   Petr Lapukhov
   Facebook
   1 Hacker Way
   Menlo Park, CA  94025
   US

   Email: petr@fb.com


   Remy Chang
   Barefoot Networks
   2185 Park Boulevard
   Palo Alto, CA  94306
   US

   Email: remy@barefootnetworks.com


   Shwetha Bhandari
   Cisco Systems, Inc.
   Cessna Business Park, Sarjapura Marathalli Outer Ring Road
   Bangalore, KARNATAKA 560 087
   India

   Email: shwethab@cisco.com









Lapukhov, et al.       Expires September 17, 2018               [Page 9]

Internet-Draft       draft-lapukhov-dataplane-probe           March 2018


   Frank Brockners
   Cisco Systems, Inc.
   Hansaallee 249, 3rd Floor
   DUESSELDORF, NORDRHEIN-WESTFALEN  40549
   Germany

   Email: fbrockne@cisco.com












































Lapukhov, et al.       Expires September 17, 2018              [Page 10]