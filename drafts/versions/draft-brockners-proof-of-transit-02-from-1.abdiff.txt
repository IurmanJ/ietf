
INTRODUCTION, paragraph 2:
EXPLANATION: 

OLD:

                             Proof of Transit
|                  draft-brockners-proof-of-transit-01

NEW:

                             Proof of Transit
|                  draft-brockners-proof-of-transit-02


------------------------------------------------------------------------


Section 8., paragraph 0:
EXPLANATION: 

OLD:

    1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
    2.  Conventions . . . . . . . . . . . . . . . . . . . . . . . . .   4
    3.  Proof of Transit  . . . . . . . . . . . . . . . . . . . . . .   4
      3.1.  Basic Idea  . . . . . . . . . . . . . . . . . . . . . . .   5
      3.2.  Solution Approach . . . . . . . . . . . . . . . . . . . .   5
        3.2.1.  Setup . . . . . . . . . . . . . . . . . . . . . . . .   6
        3.2.2.  In Transit  . . . . . . . . . . . . . . . . . . . . .   6
        3.2.3.  Verification  . . . . . . . . . . . . . . . . . . . .   6
      3.3.  Example for Illustration  . . . . . . . . . . . . . . . .   7
        3.3.1.  Basic Version . . . . . . . . . . . . . . . . . . . .   7
          3.3.1.1.  Secret Shares . . . . . . . . . . . . . . . . . .   7
          3.3.1.2.  Lagrange Polynomials  . . . . . . . . . . . . . .   7
          3.3.1.3.  LPC Computation . . . . . . . . . . . . . . . . .   8
          3.3.1.4.  Reconstruction  . . . . . . . . . . . . . . . . .   8
          3.3.1.5.  Verification  . . . . . . . . . . . . . . . . . .   8
        3.3.2.  Enhanced Version  . . . . . . . . . . . . . . . . . .   9
          3.3.2.1.  Random Polynomial . . . . . . . . . . . . . . . .   9
          3.3.2.2.  Reconstruction  . . . . . . . . . . . . . . . . .   9
          3.3.2.3.  Verification  . . . . . . . . . . . . . . . . . .  10
      3.4.  Operational Aspects . . . . . . . . . . . . . . . . . . .  10
    4.  Sizing the Data for Proof of Transit  . . . . . . . . . . . .  11
    5.  Node Configuration  . . . . . . . . . . . . . . . . . . . . .  12
      5.1.  Procedure . . . . . . . . . . . . . . . . . . . . . . . .  12
      5.2.  YANG Model  . . . . . . . . . . . . . . . . . . . . . . .  12
    6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  15
    7.  Manageability Considerations  . . . . . . . . . . . . . . . .  15
    8.  Security Considerations . . . . . . . . . . . . . . . . . . .  16
      8.1.  Proof of Transit  . . . . . . . . . . . . . . . . . . . .  16
|     8.2.  Anti Replay . . . . . . . . . . . . . . . . . . . . . . .  16
|     8.3.  Anti Tampering  . . . . . . . . . . . . . . . . . . . . .  16
|     8.4.  Recycling . . . . . . . . . . . . . . . . . . . . . . . .  17
|     8.5.  Redundant Nodes and Failover  . . . . . . . . . . . . . .  17
|     8.6.  Controller Operation  . . . . . . . . . . . . . . . . . .  17
|     8.7.  Verification Scope  . . . . . . . . . . . . . . . . . . .  17
|       8.7.1.  Node Ordering . . . . . . . . . . . . . . . . . . . .  18
|       8.7.2.  Stealth Nodes . . . . . . . . . . . . . . . . . . . .  18
|   9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  18
|   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  18
|     10.1.  Normative References . . . . . . . . . . . . . . . . . .  18
|     10.2.  Informative References . . . . . . . . . . . . . . . . .  18
|   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  19

NEW:

    1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
    2.  Conventions . . . . . . . . . . . . . . . . . . . . . . . . .   4
    3.  Proof of Transit  . . . . . . . . . . . . . . . . . . . . . .   4
      3.1.  Basic Idea  . . . . . . . . . . . . . . . . . . . . . . .   5
      3.2.  Solution Approach . . . . . . . . . . . . . . . . . . . .   5
        3.2.1.  Setup . . . . . . . . . . . . . . . . . . . . . . . .   6
        3.2.2.  In Transit  . . . . . . . . . . . . . . . . . . . . .   6
        3.2.3.  Verification  . . . . . . . . . . . . . . . . . . . .   6
      3.3.  Example for Illustration  . . . . . . . . . . . . . . . .   7
        3.3.1.  Basic Version . . . . . . . . . . . . . . . . . . . .   7
          3.3.1.1.  Secret Shares . . . . . . . . . . . . . . . . . .   7
          3.3.1.2.  Lagrange Polynomials  . . . . . . . . . . . . . .   7
          3.3.1.3.  LPC Computation . . . . . . . . . . . . . . . . .   8
          3.3.1.4.  Reconstruction  . . . . . . . . . . . . . . . . .   8
          3.3.1.5.  Verification  . . . . . . . . . . . . . . . . . .   8
        3.3.2.  Enhanced Version  . . . . . . . . . . . . . . . . . .   9
          3.3.2.1.  Random Polynomial . . . . . . . . . . . . . . . .   9
          3.3.2.2.  Reconstruction  . . . . . . . . . . . . . . . . .   9
          3.3.2.3.  Verification  . . . . . . . . . . . . . . . . . .  10
      3.4.  Operational Aspects . . . . . . . . . . . . . . . . . . .  10
    4.  Sizing the Data for Proof of Transit  . . . . . . . . . . . .  11
    5.  Node Configuration  . . . . . . . . . . . . . . . . . . . . .  12
      5.1.  Procedure . . . . . . . . . . . . . . . . . . . . . . . .  12
      5.2.  YANG Model  . . . . . . . . . . . . . . . . . . . . . . .  12
    6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  15
    7.  Manageability Considerations  . . . . . . . . . . . . . . . .  15
    8.  Security Considerations . . . . . . . . . . . . . . . . . . .  16
      8.1.  Proof of Transit  . . . . . . . . . . . . . . . . . . . .  16
|     8.2.  Cryptanalysis . . . . . . . . . . . . . . . . . . . . . .  16
|     8.3.  Anti Replay . . . . . . . . . . . . . . . . . . . . . . .  17
|     8.4.  Anti Preplay  . . . . . . . . . . . . . . . . . . . . . .  17
|     8.5.  Anti Tampering  . . . . . . . . . . . . . . . . . . . . .  17
|     8.6.  Recycling . . . . . . . . . . . . . . . . . . . . . . . .  18
|     8.7.  Redundant Nodes and Failover  . . . . . . . . . . . . . .  18
|     8.8.  Controller Operation  . . . . . . . . . . . . . . . . . .  18
|     8.9.  Verification Scope  . . . . . . . . . . . . . . . . . . .  18
|       8.9.1.  Node Ordering . . . . . . . . . . . . . . . . . . . .  19
|       8.9.2.  Stealth Nodes . . . . . . . . . . . . . . . . . . . .  19
|   9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  19
|   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  19
|     10.1.  Normative References . . . . . . . . . . . . . . . . . .  19
|     10.2.  Informative References . . . . . . . . . . . . . . . . .  19
|   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  20


------------------------------------------------------------------------


Section 3.3.2.1., paragraph 1:
EXPLANATION: 

OLD:

    Let the second polynomial POLY-2 be (RND + 7x + 10 x^2).  RND is a
    random number and is generated for each packet.  Note that POLY-2 is
    public and need not be kept secret.  The nodes can be pre-configured
    with the non-constant coefficients (for example, 7 and 10 in this
|   case could be configured through the Controller on each node).

NEW:

    Let the second polynomial POLY-2 be (RND + 7x + 10 x^2).  RND is a
    random number and is generated for each packet.  Note that POLY-2 is
    public and need not be kept secret.  The nodes can be pre-configured
    with the non-constant coefficients (for example, 7 and 10 in this
|   case could be configured through the Controller on each node).  So
|   precisely only RND value changes per packet and is public and the
|   rest of the non-constant co-efficients of POLY-2 kept secret.


------------------------------------------------------------------------


Section 3.3.2.2., paragraph 11:
EXPLANATION: 

OLD:

       CML = 39 + ((47 + 12)*38) mod 53 = 39 + 16 = 55 mod 53 = 2
    The verification using CML is discussed in next section.

NEW:

       CML = 39 + ((47 + 12)*38) mod 53 = 39 + 16 = 55 mod 53 = 2
|
    The verification using CML is discussed in next section.


------------------------------------------------------------------------


Section 1., paragraph 0:
EXPLANATION: 

OLD:

    1.  The points (x,y) for each of the nodes on the public and private
        polynomials are picked such that the x component of the points
        match.  This lends to the LPC values which are used to calculate
        the cumulative value CML to be constant.  Note that the LPC are
|       only depending on the x components.  The can be computed at the
        controller and communicated to the nodes.  Otherwise, one would
        need to distributed the x components to all the nodes.

NEW:

    1.  The points (x,y) for each of the nodes on the public and private
        polynomials are picked such that the x component of the points
        match.  This lends to the LPC values which are used to calculate
        the cumulative value CML to be constant.  Note that the LPC are
|       only depending on the x components.  They can be computed at the
        controller and communicated to the nodes.  Otherwise, one would
        need to distributed the x components to all the nodes.


------------------------------------------------------------------------


Section 2., paragraph 0:
EXPLANATION: 

OLD:

    2.  A pre-evaluated portion of the public polynomial for each of the
        nodes is calculated and added to the POT-profile.  Without this
        all the coefficients of the public polynomial had to be added to
|       the POT profile and each node had to evaluate them.

NEW:

    2.  A pre-evaluated portion of the public polynomial for each of the
        nodes is calculated and added to the POT-profile.  Without this
        all the coefficients of the public polynomial had to be added to
|       the POT profile and each node had to evaluate them.  As stated
|       before, the public portion is only the constant co-efficent RND
|       value, the pre-evaluated portion for each nodes should be kept
|       secret as well.


------------------------------------------------------------------------


Section 8.1., paragraph 3:
EXPLANATION: 

OLD:

|   o  The Shares of the SECRET (i.e., points on POLY-1 ) are kept secret
|      by individual nodes.

NEW:

|   o  Precisely three values are kept secret by individual nodes.  Share
|      of SECRET (i.e. points on POLY-1), Share of POLY-2, LPC, P.  Note
|      that only constant coefficient, RND, of POLY-2 is public.  x
|      values and non-constant coefficient of POLY-2 are secret


------------------------------------------------------------------------


Section 8.1., paragraph 5:
EXPLANATION: 

OLD:

|8.2.  Anti Replay

NEW:

|   Also it is highly recommended that different polynomials should be
|   used as POLY-1 across different paths, traffic profiles or service
|   chains.


------------------------------------------------------------------------


Section 8.1., paragraph 6:
EXPLANATION: 

OLD:

|   A passive attacker observing CML values across nodes (i.e., as the
|   packets entering and leaving), cannot perform differential analysis
|   to construct the points on POLY-1 as the operations are done modulo
|   prime.  The solution approach is flexible, one could use different
|   points on POLY-1 or different polynomials as POLY-1 across different
|   paths, traffic profiles or service chains.

NEW:

|8.2.  Cryptanalysis


------------------------------------------------------------------------


Section 8.1., paragraph 7:
EXPLANATION: 

OLD:

|   Doing differential analysis across packets could be mitigated with
|   POLY-2 being be random.  Further an attacker could reuse a set of RND
|   and all the intermediate CML values to bypass certain nodes in later
|   packets.  Such attacks could be avoided by carefully choosing POLY-2
|   as a timestamp concatenated with a random string.  The verifier could
|   use the timestamp to mitigate reuse within a time window.

NEW:

|   A passive attacker could try to harvest the POT data (i.e CML, RND
|   values) in order to determine the configured secrets.  Subsequently
|   two types of differential analysis for guessing the secrets could be
|   done.


------------------------------------------------------------------------


Section 8.1., paragraph 8:
EXPLANATION: 

OLD:

|8.3.  Anti Tampering

NEW:

|   o  Inter-Node: A passive attacker observing CML values across nodes
|      (i.e., as the packets entering and leaving), cannot perform
|      differential analysis to construct the points on POLY-1.  This is
|      because at each point there are four unknowns (i.e.  Share(POLY-
|      1), Share(Poly-2) LPC and prime number P) and three known values
|      (i.e.  RND, CML-before, CML-after).
|
|   o  Inter-Packets: A passive attacker could observe CML values across
|      packets (i.e., values of PKT-1 and subsequent PKT-2), in order to
|      predict the secrets.  Differential analysis across packets could
|      be mitigated using a good PRNG for generating RND.  Note that if
|      constant coefficient is a sequence number than CML values become
|      quite predictable and the scheme would be broken
|
|8.3.  Anti Replay
|
|   A passive attacker could reuse a set of older RND and the
|   intermediate CML values to bypass certain nodes in later packets.
|   Such attacks could be avoided by carefully choosing POLY-2 as a
|   (SEQ_NO + RND).  For example if 64 bits are being used for POLY-2
|   then first 16 bits could be a sequence number SEQ_NO and next 48 bits
|   could be a random number.
|
|   Subsequently, the verifier could use the SEQ_NO bits to run classic
|   anti-replay techniques like sliding window used in IPSEC.  The
|   verifier could buffer upto 2^16 packets as a sliding window.  Packets
|   arriving with a higher SEQ_NO than current buffer could be flagged
|   legitimate.  Packets arriving with a lower SEQ_NO than current buffer
|   could be flagged as suspicious.
|
|   For all practical purposes in the rest of the document by RND we mean
|   SEQ_NO + RND to keep it simple
|
|8.4.  Anti Preplay
|
|   An active attacker could try to perform a man-in-the-middle (MITM)
|   attack by extracting the POT of PKT-1 and using it in PKT-2.
|   Subsequently attacker drops the PKT-1 in order to avoid duplicate POT
|   values reaching the verifier.  Although such attacks are highly
|   difficult to launch, below recommendations are provided
|
|   o  Any such MITM attack would add delay in the packets arrival at
|      verifier.  Carefully chosing the SEQ_NO could thwart such attacks,
|      as such crafted packets would be out of sliding window due to
|      delay.
|
|   o  Also integrity checks performed at higher level protocols using
|      POT schemes could identify that the packets were tampered
|
|8.5.  Anti Tampering


------------------------------------------------------------------------


Section 8.1., paragraph 10:
EXPLANATION: 

OLD:

|8.4.  Recycling

NEW:

|8.6.  Recycling


------------------------------------------------------------------------


Section 8.1., paragraph 12:
EXPLANATION: 

OLD:

|8.5.  Redundant Nodes and Failover

NEW:

|8.7.  Redundant Nodes and Failover


------------------------------------------------------------------------


Section 8.1., paragraph 14:
EXPLANATION: 

OLD:

|8.6.  Controller Operation

NEW:

|8.8.  Controller Operation


------------------------------------------------------------------------


Section 3100, paragraph 1:
EXPLANATION: 

OLD:

|8.7.  Verification Scope

NEW:

|8.9.  Verification Scope


------------------------------------------------------------------------


Section 3100, paragraph 3:
EXPLANATION: 

OLD:

|8.7.1.  Node Ordering

NEW:

|8.9.1.  Node Ordering


------------------------------------------------------------------------


Section 3100, paragraph 5:
EXPLANATION: 

OLD:

|8.7.2.  Stealth Nodes

NEW:

|8.9.2.  Stealth Nodes


------------------------------------------------------------------------


Section 10.1., paragraph 1:
EXPLANATION: 

OLD:

|   [draft-kitamura-ipv6-record-route]
|              Kitamura, H., "Record Route for IPv6 (PR6),Hop-by-Hop
|              Option Extension", November 2000.
|
    [RFC7665]  Halpern, J., Ed. and C. Pignataro, Ed., "Service Function
               Chaining (SFC) Architecture", RFC 7665,
               DOI 10.17487/RFC7665, October 2015,
               <http://www.rfc-editor.org/info/rfc7665>.

NEW:

    [RFC7665]  Halpern, J., Ed. and C. Pignataro, Ed., "Service Function
               Chaining (SFC) Architecture", RFC 7665,
               DOI 10.17487/RFC7665, October 2015,
               <http://www.rfc-editor.org/info/rfc7665>.


------------------------------------------------------------------------


Section 10.2., paragraph 1:
EXPLANATION: 

OLD:

|   [draft-brockners-inband-oam-data]
|              Brockners, F. and S. Bhandari, "Data Formats for in-band
|              OAM", July 2016.
|
|   [draft-brockners-inband-oam-requirements]
|              Brockners, F., Bhandari, S., and S. Dara, "Requirements
|              for in-band OAM", July 2016.
|
|   [draft-brockners-inband-oam-transport]
|              Brockners, F. and S. Bhandari, "Encapsulations for in-band
|              OAM", July 2016.
|
|   [FD.io]    "Fast Data Project: FD.io", <https://fd.io/>.
|
|   [I-D.hildebrand-spud-prototype]
|              Hildebrand, J. and B. Trammell, "Substrate Protocol for
|              User Datagrams (SPUD) Prototype", draft-hildebrand-spud-
|              prototype-03 (work in progress), March 2015.
|
    [I-D.ietf-anima-autonomic-control-plane]
               Behringer, M., Eckert, T., and S. Bjarnason, "An Autonomic
               Control Plane", draft-ietf-anima-autonomic-control-
               plane-03 (work in progress), July 2016.

NEW:

    [I-D.ietf-anima-autonomic-control-plane]
               Behringer, M., Eckert, T., and S. Bjarnason, "An Autonomic
               Control Plane", draft-ietf-anima-autonomic-control-
               plane-03 (work in progress), July 2016.


------------------------------------------------------------------------


Section 10.2., paragraph 2:
EXPLANATION: 

OLD:

|   [P4]       Kim, , "P4: In-band Network Telemetry (INT)", September
|              2015.
|
 Authors' Addresses

NEW:

 Authors' Addresses


------------------------------------------------------------------------


Section 10.2., paragraph 6:
EXPLANATION: 

OLD:

    Email: shwethab@cisco.com
    Sashank Dara
    Cisco Systems, Inc.
    Cessna Business Park, Sarjapura Marathalli Outer Ring Road
    BANGALORE, Bangalore, KARNATAKA 560 087
    INDIA

NEW:

    Email: shwethab@cisco.com
|
    Sashank Dara
    Cisco Systems, Inc.
    Cessna Business Park, Sarjapura Marathalli Outer Ring Road
    BANGALORE, Bangalore, KARNATAKA 560 087
    INDIA


------------------------------------------------------------------------


Section 25, paragraph 0:
EXPLANATION: 

OLD:

    Email: John_Leddy@cable.comcast.com
|
    Stephen Youell
    JP Morgan Chase
    25 Bank Street
    London  E14 5JP
    United Kingdom

NEW:

    Email: John_Leddy@cable.comcast.com
    Stephen Youell
    JP Morgan Chase
    25 Bank Street
    London  E14 5JP
    United Kingdom


------------------------------------------------------------------------

